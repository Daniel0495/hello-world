
import math
import numpy as np
import matplotlib.pyplot as plt

mu = 2
sigma = 1
Xcero = 1
T = 1
N = 2 ** 8
dt = 1 / N
B = [0]
t = [0]
x_sol = [Xcero]
x_aprox = [Xcero]
Xtemp = Xcero
q = 0
EMC = 0

for i in range(0, N+1):
    t.append(i * dt)
    l = q + np.random.normal(0, 1) * (dt) ** (1 / 2)
    B.append(l)
    x_soltemp = Xcero * math.e ** ((mu - 0.5 * sigma ** 2) * t[i] + sigma * B[i])
    x_sol.append(x_soltemp)
    q = l


    r = Xtemp + mu * Xtemp * dt + sigma * Xtemp * (B[i] - B[i - 1]) + 0.5*(sigma**2 * Xtemp )*((B[i] - B[i - 1])**2 - dt)
    x_aprox.append(r)
    Xtemp = r

    EMC = EMC + (x_sol[i] - x_aprox[i])**2



print(EMC)
plt.plot(t, x_sol, 'black', label = "Solución explícita")
plt.plot(t, x_aprox, 'r--', label = "Aproximación de Milstein")
plt.legend()
plt.show()
